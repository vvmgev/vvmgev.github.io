{"version":3,"sources":["redux/actionTypes.js","redux/reducers/index.js","redux/reducers/weather.js","redux/store.js","components/list/list.js","helpers/index.js","components/weather/weather.js","hooks/index.js","services/request.js","redux/actions/index.js","components/search/search.js","components/App.js","reportWebVitals.js","index.js"],"names":["SAVE_WEATHER","ERROR_WEATHER","combineReducers","weather","state","action","type","payload","error","createStore","rootReducer","applyMiddleware","thunk","List","items","render","itemClick","restProps","map","item","index","onClick","id","memo","round","value","Math","getWeekName","dt","options","weekday","Date","toLocaleString","Weather","useSelector","useState","activeDayIndex","setActiveDayIndex","cityName","city","name","previousCityName","defaultParam","ref","useRef","useEffect","current","usePrevious","message","className","country","list","temp","day","night","humidity","_","Request","URL","urlParams","URLSearchParams","units","appid","query","fetch","this","toString","a","request","json","saveWeather","onSearch","dispatch","getWeather","cod","debounce","func","timer","timeout","args","clearTimeout","setTimeout","apply","useDebounce","useDispatch","onChange","e","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.64f1682d.chunk.js","sourcesContent":["export const SAVE_WEATHER = 'SAVE_WEATHER';\nexport const ERROR_WEATHER = 'ERROR_WEATHER';","import { combineReducers } from \"redux\";\nimport weather from \"./weather\";\n\nexport default combineReducers({ weather });\n","import { SAVE_WEATHER, ERROR_WEATHER } from '../actionTypes';\n\nexport default function (state = null, action) {\n    switch (action.type) {\n        case SAVE_WEATHER: {\n            const { weather } = action.payload;\n            return {\n                ...weather\n            };\n        }\n        case ERROR_WEATHER: {\n            const { weather } = action.payload;\n            return {\n                ...weather,\n                error: true\n            };\n        }\n\n        default:\n            return state\n    }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunk));\n","import { memo } from 'react';\nimport './list.css';\n\nconst List = ({items, render, itemClick, ...restProps} ) => {\n    return (\n        <ul {...restProps}>\n          {items.map((item, index) => (\n            <li onClick={() => itemClick && itemClick(item, index)} key={item.id ||  index}>\n              {render(item, index)}\n            </li>\n          ))}\n        </ul>\n      );\n}\n\nexport default memo(List);","export const round = (value) => Math.round(value);\nexport const getWeekName = (dt, options = {weekday:'short'}) => new Date(dt * 1000).toLocaleString('en-us', options) ","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux'\nimport List from '../list/list'\nimport { round, getWeekName } from '../../helpers';\nimport { usePrevious } from '../../hooks';\nimport './weather.css';\n\n\nfunction Weather() {\n\n    const weather = useSelector((state) => state.weather);\n    const [activeDayIndex, setActiveDayIndex] = useState(0);\n    const cityName = weather?.city?.name;\n    const previousCityName = usePrevious(cityName)\n    useEffect(() => previousCityName !== cityName && setActiveDayIndex(0), [cityName])\n\n\n    if (!weather) {\n        return (<h2> Please enter the city name</h2>)   \n    }\n\n    if(weather.error) {\n        return (<h2>{weather.message}</h2>)\n    }\n\n    return (\n        <div className=\"weather-info\">\n            <h2>{weather.city.name} {weather.city.country}</h2> \n            <div className=\"today-info\">\n                <div className=\"today-info-row\">\n                    <span>Day</span>\n                    <span>{round(weather.list[activeDayIndex].temp.day)}</span>\n                </div>\n                <div className=\"today-info-row\">\n                    <span>Night</span>\n                    <span>{round(weather.list[activeDayIndex].temp.night)}</span>\n                </div>\n                <div className=\"today-info-row\">\n                    <span>Humidity</span>\n                    <span>{round(weather.list[activeDayIndex].humidity)}%</span>\n                </div>\n            </div>\n            <List\n                className=\"week-list\"\n                items={weather.list}\n                itemClick={(_, index) => setActiveDayIndex(index)}\n                render={({temp : { day, night }, dt }, index) => (\n                    <div className={`day-info ${index === activeDayIndex ? \"active\" : \"\"}`}>\n                        <span className=\"day-name\">{getWeekName(dt)}</span>\n                        <h3 className=\"day-temp\">{round(day)}</h3>\n                        <h4 className=\"day-temp\">{round(night)}</h4>\n                    </div>\n                )}\n            />\n        </div>\n    )\n\n}\n\nexport default Weather;","import { useRef, useEffect } from \"react\";\n\nexport const useDebounce = (func, timeout = 1000) => {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {func.apply(this, args); }, timeout);\n    };\n}\n\nexport const usePrevious = (value, defaultParam = '') => {\n    const ref = useRef(defaultParam);\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n}\n","class Request {\n    URL = 'https://api.openweathermap.org/data/2.5/forecast/daily';\n    urlParams = new URLSearchParams({units: 'metric', appid: '58b6f7c78582bffab3936dac99c31b25'})\n\n    request(query) {\n        return fetch(`${this.URL}?q=${query}&${this.urlParams.toString()}`)\n    }\n\n    async getWeather(city)  {\n        return await (await this.request(city)).json();\n    }\n    \n}\n\nexport default new Request();","import Request from '../../services/request';\nimport { SAVE_WEATHER, ERROR_WEATHER } from '../actionTypes';\n\nexport const saveWeather = weather => ({\n  type: SAVE_WEATHER,\n  payload: {\n    weather,\n  }\n});\n\nexport const onError = error => ({\n  type: ERROR_WEATHER,\n  payload: {\n    weather : error\n  }\n});\n\n// there can be implmentation of loading case\n\nexport const onSearch = city => async dispatch => {\n    const weather = await Request.getWeather(city);\n    if(weather.cod !== '200'){\n      dispatch(onError(weather))  \n      return;\n    }\n    dispatch(saveWeather(weather))\n}\n\n","import { useDispatch } from 'react-redux'\nimport { useDebounce } from '../../hooks'\nimport { onSearch } from '../../redux/actions';\n\nimport './search.css';\n\nfunction Weather() {\n    const dispatch = useDispatch();\n    const debounce = useDebounce(dispatch, 500)\n    const onChange = async e => debounce(onSearch(e.target.value))\n\n    return (\n        <div>\n            <input onChange={onChange} className=\"searchbar\" id=\"search\" type=\"text\" placeholder=\"enter city, country\"></input>\n        </div>\n    )\n\n}\n\nexport default Weather;","import Weather from './weather/weather';\nimport Search from './search/search'\nimport './App.css';\n\nfunction App() {\n  return (\n      <div className=\"container\">\n        <Search />\n        <Weather />\n      </div>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}